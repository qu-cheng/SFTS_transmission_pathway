ggsave("Figures/FigS7_pdp_R0.pdf", width = 9, height = 9)
#=============================== Figure S8 ===========================================
#                              kappa = 0.05
#                 permutation importance by outcome of interest
#====================================================================================
plot.a <-  RF.summary %>%
filter(K.sce == 0.05) %>%
group_by(parameter) %>%
mutate(average = mean(value)) %>%
ungroup() %>%
arrange(average) %>%
mutate(parameter = factor(parameter, levels = rev(import.order$parameter)),
scenarios = paste(N.sce, I.sce, sep = ", ")) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
group_by(N.sce, I.sce) %>%
mutate(value.order = rank(-value)) %>%
ggplot(aes(x = I.sce, y = parameter, fill = value)) +
geom_tile() +
geom_text(aes(label = value.order), col = "red4", size = 3.5) +
theme_cowplot() +
facet_grid(~N.sce, scales = "free_x", switch = "x") +
theme(strip.background = element_blank(),
strip.placement = "outside",
legend.position = "top",
legend.justification = "left",
plot.tag.position = c(-0.14, 0.075),
plot.tag = element_text(size = 11),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.spacing = unit(0.1, "lines"),
plot.margin = unit(c(1.5, 0.2, 0.5, 2.5), "lines"),     # margin(t, r, b, l)
legend.key.width = unit(0.8, "cm"),
legend.box.spacing = unit(2, "pt"),
legend.text = element_text(size = 9),
panel.border = element_rect(colour = "black")) +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0), labels = lab) +
labs(fill = "", y = "", x= "", tag = "Viremia\n(days)\n\nAbundance\n(per host)") +
scale_fill_gradientn(colors = rev(paletteer_c("grDevices::Blues 3", 30)))
plot.b <- read.csv("Results/RF_imp_systemic.csv") %>%
#  filter(variable %in% important.par$parameter) %>%
group_by(I.sce, N.sce, K.sce, variable) %>%
summarise(value = median(importance)) %>%
rename(parameter = variable)%>%
mutate(type = "Random forest") %>%
ungroup() %>%
filter(K.sce == 0.05) %>%
group_by(parameter) %>%
mutate(average = mean(value)) %>%
ungroup() %>%
arrange(average) %>%
mutate(parameter = factor(parameter, levels = rev(import.order$parameter)),
scenarios = paste(N.sce, I.sce, sep = ", ")) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
group_by(N.sce, I.sce) %>%
mutate(value.order = rank(-value)) %>%
ggplot(aes(x = I.sce, y = parameter, fill = value)) +
geom_tile() +
geom_text(aes(label = value.order), col = "red4", size = 3.5) +
theme_cowplot() +
facet_grid(~N.sce, scales = "free_x", switch = "x") +
theme(strip.background = element_blank(),
strip.placement = "outside",
legend.position = "top",
legend.justification = "left",
plot.tag.position = c(-0.14, 0.075),
plot.tag = element_text(size = 11),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.spacing = unit(0.1, "lines"),
plot.margin = unit(c(1.5, 0.2, 0.5, 0), "lines"),     # margin(t, r, b, l)
legend.key.width = unit(0.8, "cm"),
legend.box.spacing = unit(2, "pt"),
legend.text = element_text(size = 9),
panel.border = element_rect(colour = "black")) +
labs(fill = "", y = "", x= "") +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0), labels = lab) +
scale_fill_gradientn(colors = rev(paletteer_c("grDevices::Blues 3", 30)))
plot.c <- read.csv("Results/RF_imp_nonsystemic.csv") %>%
group_by(I.sce, N.sce, K.sce, variable) %>%
summarise(value = median(importance)) %>%
rename(parameter = variable)%>%
mutate(type = "Random forest") %>%
ungroup() %>%
filter(K.sce == 0.05) %>%
group_by(parameter) %>%
mutate(average = mean(value)) %>%
ungroup() %>%
arrange(average) %>%
mutate(parameter = factor(parameter, levels = rev(import.order$parameter)),
scenarios = paste(N.sce, I.sce, sep = ", ")) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
group_by(N.sce, I.sce) %>%
mutate(value.order = rank(-value)) %>%
ggplot(aes(x = I.sce, y = parameter, fill = value)) +
geom_tile() +
geom_text(aes(label = value.order), col = "red4", size = 3.5) +
theme_cowplot() +
facet_grid(~N.sce, scales = "free_x", switch = "x") +
theme(strip.background = element_blank(),
strip.placement = "outside",
legend.position = "top",
legend.justification = "left",
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.spacing = unit(0.1, "lines"),
plot.margin = unit(c(1.5, 0.2, 0.5, 0), "lines"),     # margin(t, r, b, l)
legend.key.width = unit(0.8, "cm"),
legend.box.spacing = unit(2, "pt"),
legend.text = element_text(size = 9),
panel.border = element_rect(colour = "black")) +
labs(fill = "", y = "", x= "") +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0), labels = lab) +
scale_fill_gradientn(colors = rev(paletteer_c("grDevices::Blues 3", 30)))
plot.d <- read.csv("Results/RF_imp_vertical.csv") %>%
group_by(I.sce, N.sce, K.sce, variable) %>%
summarise(value = median(importance)) %>%
rename(parameter = variable)%>%
mutate(type = "Random forest") %>%
ungroup() %>%
filter(K.sce == 0.05) %>%
group_by(parameter) %>%
mutate(average = mean(value)) %>%
ungroup() %>%
arrange(average) %>%
mutate(parameter = factor(parameter, levels =rev(import.order$parameter)),
scenarios = paste(N.sce, I.sce, sep = ", ")) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
group_by(N.sce, I.sce) %>%
mutate(value.order = rank(-value)) %>%
ggplot(aes(x = I.sce, y = parameter, fill = value)) +
geom_tile() +
geom_text(aes(label = value.order), col = "red4", size = 3.5) +
theme_cowplot() +
facet_grid(~N.sce, scales = "free_x", switch = "x") +
theme(strip.background = element_blank(),
strip.placement = "outside",
legend.position = "top",
legend.justification = "left",
# plot.tag.position = c(-0.1, 0.12),
# plot.tag = element_text(size = 11),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.spacing = unit(0.1, "lines"),
plot.margin = unit(c(1.5, 0.2, 0.5, 0), "lines"),     # margin(t, r, b, l)
legend.key.width = unit(0.8, "cm"),
legend.box.spacing = unit(2, "pt"),
legend.text = element_text(size = 9),
panel.border = element_rect(colour = "black")) +
labs(fill = "", y = "", x= "") +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0), labels = lab) +
scale_fill_gradientn(colors = rev(paletteer_c("grDevices::Blues 3", 30)))
plot.e <- read.csv("Results/RF_imp_pattern.csv") %>%
group_by(I.sce, N.sce, K.sce, variable) %>%
summarise(value = median(importance)) %>%
rename(parameter = variable)%>%
mutate(type = "Random forest") %>%
ungroup() %>%
filter(K.sce == 0.05) %>%
group_by(parameter) %>%
mutate(average = mean(value)) %>%
ungroup() %>%
arrange(average) %>%
mutate(parameter = factor(parameter, levels = rev(import.order$parameter)),
scenarios = paste(N.sce, I.sce, sep = ", ")) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
group_by(N.sce, I.sce) %>%
mutate(value.order = rank(-value)) %>%
ggplot(aes(x = I.sce, y = parameter, fill = value)) +
geom_tile() +
geom_text(aes(label = value.order), col = "red4", size = 3.5) +
theme_cowplot() +
facet_grid(~N.sce, scales = "free_x", switch = "x") +
theme(strip.background = element_blank(),
strip.placement = "outside",
legend.position = "top",
legend.justification = "left",
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.spacing = unit(0.1, "lines"),
plot.margin = unit(c(1.5, 0.2, 0.5, 0), "lines"),     # margin(t, r, b, l)
legend.key.width = unit(0.8, "cm"),
legend.box.spacing = unit(2, "pt"),
legend.text = element_text(size = 9),
panel.border = element_rect(colour = "black")) +
labs(fill = "", y = "", x= "") +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0), labels = lab) +
scale_fill_gradientn(colors = rev(paletteer_c("grDevices::Blues 3", 30)))
save_plot("Figures/FigS8_importance_ranking_k0.05.pdf", plot_grid(plot.a, plot.b, plot.c, plot.d, plot.e, ncol = 5, rel_widths = c(1.2, 1, 1, 1, 1)) + draw_plot_label(c('A*")"*~R[0]', 'B*")"*~Systemic', 'C*")"*~Non-systemic', 'D*")"*~Transovarial', 'E*")"*~Pattern'), x = c(0, 0.2, 0.4, 0.6, 0.8), y = c(1, 1, 1, 1, 1), parse = TRUE), base_height = 10, base_width = 13)
#=============================== Figure S9 ===========================================
#                              kappa = 0.5
#                 permutation importance by outcome of interest
#====================================================================================
plot.a <-  RF.summary %>%
filter(K.sce == 0.5) %>%
group_by(parameter) %>%
mutate(average = mean(value)) %>%
ungroup() %>%
arrange(average) %>%
mutate(parameter = factor(parameter, levels = rev(import.order$parameter)),
scenarios = paste(N.sce, I.sce, sep = ", ")) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
group_by(N.sce, I.sce) %>%
mutate(value.order = rank(-value)) %>%
ggplot(aes(x = I.sce, y = parameter, fill = value)) +
geom_tile() +
geom_text(aes(label = value.order), col = "red4", size = 3.5) +
theme_cowplot() +
facet_grid(~N.sce, scales = "free_x", switch = "x") +
theme(strip.background = element_blank(),
strip.placement = "outside",
legend.position = "top",
legend.justification = "left",
plot.tag.position = c(-0.14, 0.075),
plot.tag = element_text(size = 11),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.spacing = unit(0.1, "lines"),
plot.margin = unit(c(1.5, 0.2, 0.5, 2.5), "lines"),     # margin(t, r, b, l)
legend.key.width = unit(0.8, "cm"),
legend.box.spacing = unit(2, "pt"),
legend.text = element_text(size = 9),
panel.border = element_rect(colour = "black")) +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0), labels = lab) +
labs(fill = "", y = "", x= "", tag = "Viremia\n(days)\n\nAbundance\n(per host)") +
scale_fill_gradientn(colors = rev(paletteer_c("grDevices::Blues 3", 30)))
plot.b <- read.csv("Results/RF_imp_systemic.csv") %>%
#  filter(variable %in% important.par$parameter) %>%
group_by(I.sce, N.sce, K.sce, variable) %>%
summarise(value = median(importance)) %>%
rename(parameter = variable)%>%
mutate(type = "Random forest") %>%
ungroup() %>%
filter(K.sce == 0.5) %>%
group_by(parameter) %>%
mutate(average = mean(value)) %>%
ungroup() %>%
arrange(average) %>%
mutate(parameter = factor(parameter, levels = rev(import.order$parameter)),
scenarios = paste(N.sce, I.sce, sep = ", ")) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
group_by(N.sce, I.sce) %>%
mutate(value.order = rank(-value)) %>%
ggplot(aes(x = I.sce, y = parameter, fill = value)) +
geom_tile() +
geom_text(aes(label = value.order), col = "red4", size = 3.5) +
theme_cowplot() +
facet_grid(~N.sce, scales = "free_x", switch = "x") +
theme(strip.background = element_blank(),
strip.placement = "outside",
legend.position = "top",
legend.justification = "left",
plot.tag.position = c(-0.14, 0.075),
plot.tag = element_text(size = 11),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.spacing = unit(0.1, "lines"),
plot.margin = unit(c(1.5, 0.2, 0.5, 0), "lines"),     # margin(t, r, b, l)
legend.key.width = unit(0.8, "cm"),
legend.box.spacing = unit(2, "pt"),
legend.text = element_text(size = 9),
panel.border = element_rect(colour = "black")) +
labs(fill = "", y = "", x= "") +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0), labels = lab) +
scale_fill_gradientn(colors = rev(paletteer_c("grDevices::Blues 3", 30)))
plot.c <- read.csv("Results/RF_imp_nonsystemic.csv") %>%
group_by(I.sce, N.sce, K.sce, variable) %>%
summarise(value = median(importance)) %>%
rename(parameter = variable)%>%
mutate(type = "Random forest") %>%
ungroup() %>%
filter(K.sce == 0.5) %>%
group_by(parameter) %>%
mutate(average = mean(value)) %>%
ungroup() %>%
arrange(average) %>%
mutate(parameter = factor(parameter, levels = rev(import.order$parameter)),
scenarios = paste(N.sce, I.sce, sep = ", ")) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
group_by(N.sce, I.sce) %>%
mutate(value.order = rank(-value)) %>%
ggplot(aes(x = I.sce, y = parameter, fill = value)) +
geom_tile() +
geom_text(aes(label = value.order), col = "red4", size = 3.5) +
theme_cowplot() +
facet_grid(~N.sce, scales = "free_x", switch = "x") +
theme(strip.background = element_blank(),
strip.placement = "outside",
legend.position = "top",
legend.justification = "left",
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.spacing = unit(0.1, "lines"),
plot.margin = unit(c(1.5, 0.2, 0.5, 0), "lines"),     # margin(t, r, b, l)
legend.key.width = unit(0.8, "cm"),
legend.box.spacing = unit(2, "pt"),
legend.text = element_text(size = 9),
panel.border = element_rect(colour = "black")) +
labs(fill = "", y = "", x= "") +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0), labels = lab) +
scale_fill_gradientn(colors = rev(paletteer_c("grDevices::Blues 3", 30)))
plot.d <- read.csv("Results/RF_imp_vertical.csv") %>%
group_by(I.sce, N.sce, K.sce, variable) %>%
summarise(value = median(importance)) %>%
rename(parameter = variable)%>%
mutate(type = "Random forest") %>%
ungroup() %>%
filter(K.sce == 0.5) %>%
group_by(parameter) %>%
mutate(average = mean(value)) %>%
ungroup() %>%
arrange(average) %>%
mutate(parameter = factor(parameter, levels =rev(import.order$parameter)),
scenarios = paste(N.sce, I.sce, sep = ", ")) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
group_by(N.sce, I.sce) %>%
mutate(value.order = rank(-value)) %>%
ggplot(aes(x = I.sce, y = parameter, fill = value)) +
geom_tile() +
geom_text(aes(label = value.order), col = "red4", size = 3.5) +
theme_cowplot() +
facet_grid(~N.sce, scales = "free_x", switch = "x") +
theme(strip.background = element_blank(),
strip.placement = "outside",
legend.position = "top",
legend.justification = "left",
# plot.tag.position = c(-0.1, 0.12),
# plot.tag = element_text(size = 11),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.spacing = unit(0.1, "lines"),
plot.margin = unit(c(1.5, 0.2, 0.5, 0), "lines"),     # margin(t, r, b, l)
legend.key.width = unit(0.8, "cm"),
legend.box.spacing = unit(2, "pt"),
legend.text = element_text(size = 9),
panel.border = element_rect(colour = "black")) +
labs(fill = "", y = "", x= "") +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0), labels = lab) +
scale_fill_gradientn(colors = rev(paletteer_c("grDevices::Blues 3", 30)))
plot.e <- read.csv("Results/RF_imp_pattern.csv") %>%
group_by(I.sce, N.sce, K.sce, variable) %>%
summarise(value = median(importance)) %>%
rename(parameter = variable)%>%
mutate(type = "Random forest") %>%
ungroup() %>%
filter(K.sce == 0.5) %>%
group_by(parameter) %>%
mutate(average = mean(value)) %>%
ungroup() %>%
arrange(average) %>%
mutate(parameter = factor(parameter, levels = rev(import.order$parameter)),
scenarios = paste(N.sce, I.sce, sep = ", ")) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
group_by(N.sce, I.sce) %>%
mutate(value.order = rank(-value)) %>%
ggplot(aes(x = I.sce, y = parameter, fill = value)) +
geom_tile() +
geom_text(aes(label = value.order), col = "red4", size = 3.5) +
theme_cowplot() +
facet_grid(~N.sce, scales = "free_x", switch = "x") +
theme(strip.background = element_blank(),
strip.placement = "outside",
legend.position = "top",
legend.justification = "left",
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.spacing = unit(0.1, "lines"),
plot.margin = unit(c(1.5, 0.2, 0.5, 0), "lines"),     # margin(t, r, b, l)
legend.key.width = unit(0.8, "cm"),
legend.box.spacing = unit(2, "pt"),
legend.text = element_text(size = 9),
panel.border = element_rect(colour = "black")) +
labs(fill = "", y = "", x= "") +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0), labels = lab) +
scale_fill_gradientn(colors = rev(paletteer_c("grDevices::Blues 3", 30)))
save_plot("Figures/FigS9_importance_ranking_k0.5.pdf", plot_grid(plot.a, plot.b, plot.c, plot.d, plot.e, ncol = 5, rel_widths = c(1.2, 1, 1, 1, 1)) + draw_plot_label(c('A*")"*~R[0]', 'B*")"*~Systemic', 'C*")"*~Non-systemic', 'D*")"*~Transovarial', 'E*")"*~Pattern'), x = c(0, 0.2, 0.4, 0.6, 0.8), y = c(1, 1, 1, 1, 1), parse = TRUE), base_height = 10, base_width = 13)
#=============================== Figure S10 ===========================================
#                                   pdp
#======================================================================================
pdp_sys <- read.csv("Results/RF_pdp_systemic.csv") %>%
mutate(par.name = rep(rep(par.names, each = 51), 27))
pdp_sys %>%
filter(K.sce ==0.15) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
filter(par.name %in% c("Hcn", "Cs", "Hcs", "Ra", "Ql", "Sn", "E")) %>%
group_by(K.sce, I.sce, N.sce, outcome, par.name) %>%
mutate(par.std = (par - min(par))/(max(par) - min(par)),
par.name = factor(par.name, levels = c("Hcn", "Cs", "Hcs", "Ra", "Ql", "Sn", "E"))) %>%
ggplot(aes(x = par.std, y = yhat, col = par.name)) +
geom_line() +
facet_grid(rows = vars(N.sce), cols = vars(I.sce),
labeller = labeller(I.sce = function(x) paste("I = ", x),
N.sce = function(x) paste("N = ", x)),
switch = "y") +
theme_cowplot() +
theme(legend.position = "top") +
scale_color_d3(labels = c(expression(H[cn]), expression(C[s]), expression(H[cs]), expression(R[a]), expression(Q[l]), expression(S[n]), expression("E"))) +
labs(col = "", x = "Model parameters scaled to 0~1", y = "Relative contribution of systemic transmission when other parameters set to their mean values") +
guides(color = guide_legend(nrow = 1))
ggsave("Figures/FigS10_pdp_systemic.pdf", width = 9, height = 9)
#=============================== Figure S11 ===========================================
#                                   pdp
#======================================================================================
pdp_nonsys <- read.csv("Results/RF_pdp_nonsystemic.csv") %>%
mutate(par.name = rep(rep(par.names, each = 51), 27))
pdp_nonsys %>%
filter(K.sce ==0.15) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
filter(par.name %in% c("Hcn", "Cs", "Ql", "Hcs", "Pa", "I", "Ra")) %>%
group_by(K.sce, I.sce, N.sce, outcome, par.name) %>%
mutate(par.std = (par - min(par))/(max(par) - min(par)),
par.name = factor(par.name, levels = c("Hcn", "Cs", "Ql", "Hcs", "Pa", "I", "Ra"))) %>%
ggplot(aes(x = par.std, y = yhat, col = par.name)) +
geom_line() +
facet_grid(rows = vars(N.sce), cols = vars(I.sce),
labeller = labeller(I.sce = function(x) paste("I = ", x),
N.sce = function(x) paste("N = ", x)),
switch = "y") +
theme_cowplot() +
theme(legend.position = "top") +
scale_color_d3(labels = c(expression(H[cn]), expression(C[s]), expression(Q[l]), expression(H[cs]), expression(P[a]), expression("I"), expression(R[a]))) +
labs(col = "", x = "Model parameters scaled to 0~1", y = "Relative contribution of non-systemic transmission when other parameters set to their mean values") +
guides(color = guide_legend(nrow = 1))
ggsave("Figures/FigS11_pdp_nonsystemic.pdf", width = 9, height = 9)
#=============================== Figure S12 ===========================================
#                                   pdp
#======================================================================================
pdp_ver <- read.csv("Results/RF_pdp_vertical.csv") %>%
mutate(par.name = rep(rep(par.names, each = 51), 27))
pdp_ver %>%
filter(K.sce ==0.15) %>%
mutate(I.sce = case_when(I.sce == 1 ~ "1~5",
I.sce == 2 ~ "5~9",
I.sce == 3 ~ "9~12"),
N.sce = case_when(N.sce == 1 ~ "0.01~2",
N.sce == 2 ~ "2~5",
N.sce == 3 ~ "5~12"))  %>%
filter(par.name %in% c("Ra", "E", "Sn", "Sl", "Sa", "Hcs", "Ql")) %>%
group_by(K.sce, I.sce, N.sce, outcome, par.name) %>%
mutate(par.std = (par - min(par))/(max(par) - min(par)),
par.name = factor(par.name, levels = c("Ra", "E", "Sn", "Sl", "Sa", "Hcs", "Ql"))) %>%
ggplot(aes(x = par.std, y = yhat, col = par.name)) +
geom_line() +
facet_grid(rows = vars(N.sce), cols = vars(I.sce),
labeller = labeller(I.sce = function(x) paste("I = ", x),
N.sce = function(x) paste("N = ", x)),
switch = "y") +
theme_cowplot() +
theme(legend.position = "top") +
scale_color_npg(labels = c(expression(R[a]), "E", expression(S[n]), expression(S[l]), expression(S[a]), expression(H[cs]), expression(Q[l]))) +
labs(col = "", x = "Model parameters scaled to 0~1", y = "Relative contribution of transovarial transmission when other parameters set to their mean values") +
guides(color = guide_legend(nrow = 1))
ggsave("Figures/FigS12_pdp_transovarial.pdf", width = 9, height = 9)
